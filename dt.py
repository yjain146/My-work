# -*- coding: utf-8 -*-
"""DT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UPN3rJKKMC8rgPTJbNjxQOsNZB-1a64e
"""

import numpy as np
import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix, accuracy_score, classification_report

data = pd.read_csv('balance-scale.csv')

X = data.values[:, 1:5]
Y = data.values[:, 0]

X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size = 0.3, random_state = 100)

clf_gini = DecisionTreeClassifier(criterion = 'gini')
clf_gini.fit(X_train, y_train)

clf_entropy = DecisionTreeClassifier(criterion = 'entropy', random_state = 100, max_depth = 3, min_samples_leaf = 5)
clf_entropy.fit(X_train, y_train)

def prediction(X_test, clf_object):
  y_pred = clf_object.predict(X_test)
  print('Predicted values: ', y_pred)
  return y_pred


def cal_accuracy(y_test, y_pred):
  print("Confusion matrix: ", confusion_matrix(y_test, y_pred))
  print("Accuracy score: ", accuracy_score(y_test, y_pred)*100)
  print("Classification report: ", classification_report(y_test, y_pred))

print("Using gini index")
y_pred_gini = prediction(X_test, clf_gini)
cal_accuracy(y_test, y_pred_gini)

print("Using entropy")
y_pred_entropy = prediction(X_test, clf_entropy)
cal_accuracy(y_test, y_pred_entropy)